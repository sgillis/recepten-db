function updateElementIndex(el, prefix, index) {
  var regex = new RegExp('(' + prefix + '-?_?)\\d+');
  var replacement = '$1' + index;
  if (el.id) el.id = el.id.replace(regex, replacement);
  if (el.name) el.name = el.name.replace(regex, replacement);
}

function addForm(btn, prefix){
  var formCount = parseInt($('#id_' + prefix + '-TOTAL_FORMS').val());
  var row = $('.dynamic-form:last').clone();
  // Copy the last dynamic-form element, and paste it under the last element.
  $(row).insertAfter($('.dynamic-form:last'))
  // Edit the id's of every tag in the cloned element
  $(row).find('*').each(function(){
    updateElementIndex(this, prefix, formCount);
  });
  // The copied Chosen element will not work. To make it work we remove the
  // div that was generated by chosen, we remove the chzn-done class, and we
  // remove the hidden style option from select. Then we rerun chosen on 
  // the select element.
  // TODO: Should find a way to get the option for chosen() from the copied
  // chosen element.
  $(row).find('div.chzn-container').remove();
  $(row).find('select').show();
  $(row).find('select').removeClass('chzn-done');
  $(row).find('select').chosen({allow_single_deselect: true, no_results_text: "<a href='javascript:void(0)' id='no_results_text'>Voeg ingredient toe: </a><script type='text/javascript'>$('#no_results_text').click(ingredient_toevoegen);<\/script>"});
  // Update the total number of forms
  $('#id_' + prefix + '-TOTAL_FORMS').val(formCount + 1);
  // Make the remove row button visible and active
  $(row).find('a.remove-row').css('display','').on('click', function(event){removeForm(this,'form')});
  return false;
};

function removeForm(button, prefix){
  $(button).parents('.dynamic-form').remove();
  var forms = $('.dynamic-form');
  $('#id_' + prefix + '-TOTAL_FORMS').val(forms.length);
  for (var i=0, formCount=forms.length; i<formCount; i++){
    $(forms.get(i)).find('*').each(function(){
      updateElementIndex(this, prefix, i);
    });
  }
  return false
};

function getCookie(name){
  var cookieValue = null;
  if (document.cookie && document.cookie != ''){
    var cookies = document.cookie.split(';');
    for (var i=0; i<cookies.length; i++){
      var cookie = jQuery.trim(cookies[i]);
      if (cookie.substring(0, name.length + 1) == (name + '=')){
        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
        break;
      }
    }
  }
  return cookieValue;
}
var csrftoken = getCookie('csrftoken');

function csrfSafeMethod(method){
  return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
}

$.ajaxSetup({
  crossDomain: false,
  beforeSend: function(xhr, settings){
    if (!csrfSafeMethod(settings.type)){
      xhr.setRequestHeader("X-CSRFToken", csrftoken);
    }
  }
});

var ingredient_submitted = function(result, status){
  if (status=="success"){
    // Parse the json returned by Django
    ingredient = $.parseJSON(result.responseText)[0];
    // Add the new ingredient to all select fields in the dynamic forms
    var pk = ingredient.pk;
    var ingredient_naam = ingredient.fields.naam;
    $('.dynamic-form').each( function(){ $(this).find('select').append('<option value="'+pk+'">'+ingredient_naam+'</option>') } );
    // Inform chosen that the list was updated
    $('.chzn-select-hoeveelheid').trigger('liszt:updated');
    // Set the current chosen value to the new ingredient
    $('.chzn-with-drop').parent().find('select').val(pk).trigger("liszt:updated");
    // Close the drop down
    $('.chzn-with-drop').removeClass('chzn-with-drop');
  } else {
    // TODO: Do something if failed
    console.log("failed");
  }
}

// This function is called from the 'no_results_text' of 'chosen-select-hoeveelheid' class
var ingredient_toevoegen = function(){
  var ingredient_naam = $(this).parent().find('span').text();
  if (ingredient_naam!=""){
    var data = { ingredient_naam: ingredient_naam };
    var args = { type:"POST", url:"/ingredient_toevoegen/", data:data, complete:ingredient_submitted };
    $.ajax(args);
  }
  return false;
};

var type_toevoegen = function(){
  var type_naam = $(this).parent().find('span').text();
  if (type_naam!=''){
    var data = { type_naam: type_naam };
    var args = { type:"POST", url:"/type_toevoegen/", data:data, complete:type_submitted };
    $.ajax(args);
  }
  return false;
}

var type_submitted = function(results, status){
  if (status=="success"){
    type = $.parseJSON(results.responseText)[0];
    var pk = type.pk;
    var type_naam = type.fields.doel;
    $('#id_doel').append('<option value="'+pk+'">'+type_naam+'</option>');
    $('.chzn-select-type').trigger('liszt:updated');
    $('.chzn-with-drop').parent().find('select').val(pk).trigger("liszt:updated");
    $('.chzn-with-drop').removeClass('chzn-with-drop');
  }
}
